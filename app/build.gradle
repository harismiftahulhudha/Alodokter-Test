plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "co.harismiftahulhudha.alodoktertest"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions { arguments += ["room.schemaLocation": "$projectDir/schemas".toString()] }
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "DATABASE_NAME", "\"alodokter_test.db\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "DATABASE_NAME", "\"alodokter_test.db\""
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Lifecycle + ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_livedata_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_viewmodel_livedata_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_viewmodel_livedata_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_viewmodel_livedata_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_viewmodel_livedata_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_version"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$fragment_kotlin_version"

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_component_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_component_version"

    // DataStore
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt("com.github.bumptech.glide:compiler:$glide_version")

    //Glide RecyclerView Preloader
    implementation("com.github.bumptech.glide:recyclerview-integration:$glide_version") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }

    //Page Indicator Like Instagram
    implementation "ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator:1.0.6"
}